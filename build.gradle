buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.johnxb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}
dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.springfox:springfox-swagger2:2.8.0')
	compile('io.springfox:springfox-swagger-ui:2.8.0')
	compile 'mysql:mysql-connector-java'
	compile('org.springframework:spring-jdbc')
	compile('org.flywaydb:flyway-core')
	compile("org.springframework.boot:spring-boot-starter-security")
	compile "com.github.dozermapper:dozer-core:6.1.0"
//	compile("io.jsonwebtoken:jjwt:0.7.0")
	//配置mybatis 数据源
	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
	testCompile('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.0')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
//mybatis generator plugin ------ start
buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
	}
}

apply plugin: "com.arenagod.gradle.MybatisGenerator"

configurations {
	mybatisGenerator
}

mybatisGenerator {
	verbose = true
	configFile = 'src/main/resources/generatorConfig.xml'

}